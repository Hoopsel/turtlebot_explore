import numpy as np
import matplotlib.pyplot as plt
import matplotlib.cm as cm
from laser_detect import ScanDetector

nan = float("nan")

angle_min = -0.513185441494
angle_max = 0.49990695715
angle_increment = 0.00158543407451
angles = np.arange(angle_min, angle_max, angle_increment)
ranges = [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, 1.225793719291687, 1.2338327169418335, 1.24075448513031, 1.2512550354003906, 1.2537328004837036, 1.2528941631317139, 1.2520581483840942, 1.2556380033493042, 1.2548041343688965, 1.2495651245117188, 1.248739242553711, 1.25149405002594, 1.2506729364395142, 1.2542475461959839, 1.2578191757202148, 1.2570000886917114, 1.2561836242675781, 1.2553699016571045, 1.2589375972747803, 1.253750205039978, 1.2573176622390747, 1.2565115690231323, 1.2461776733398438, 1.2453851699829102, 1.2445954084396362, 1.2438081502914429, 1.2430236339569092, 1.2422418594360352, 1.2414627075195312, 1.2406861782073975, 1.2399123907089233, 1.2434815168380737, 1.2427103519439697, 1.241942048072815, 1.2411763668060303, 1.2353262901306152, 1.2388956546783447, 1.2381408214569092, 1.2373888492584229, 1.2366396188735962, 1.231579303741455, 1.2351492643356323, 1.2344082593917847, 1.2336699962615967, 1.232934594154358, 1.2322018146514893, 1.2314718961715698, 1.2307448387145996, 1.2300204038619995, 1.2292989492416382, 1.2328684329986572, 1.2278642654418945, 1.2221599817276, 1.2171766757965088, 1.2164769172668457, 1.2157800197601318, 1.2150858640670776, 1.2143945693969727, 1.2179721593856812, 1.217284083366394, 1.2165988683700562, 1.2159165143966675, 1.2152369022369385, 1.2145602703094482, 1.218138337135315, 1.2174650430679321, 1.2125475406646729, 1.2161271572113037, 1.2154624462127686, 1.2148007154464722, 1.2141419649124146, 1.2134860754013062, 1.212833046913147, 1.2121829986572266, 1.2115358114242554, 1.2066650390625, 1.2060259580612183, 1.2096118927001953, 1.2089763879776, 1.2083439826965332, 1.2034989595413208, 1.207087755203247, 1.206464171409607, 1.205843448638916, 1.2052258253097534, 1.20461106300354, 1.2039992809295654, 1.2033904790878296, 1.202784776687622, 1.2021819353103638, 1.2015820741653442, 1.1967934370040894, 1.1962016820907593, 1.199800729751587, 1.199212908744812, 1.1986281871795654, 1.1980464458465576, 1.1974676847457886, 1.2010695934295654, 1.2004950046539307, 1.1999233961105347, 1.1993547677993774, 1.1987892389297485, 1.198226809501648, 1.1976674795150757, 1.192947268486023, 1.1923960447311401, 1.191847801208496, 1.1913026571273804, 1.1907604932785034, 1.1902215480804443, 1.189685583114624, 1.1891528367996216, 1.1927717924118042, 1.1922433376312256, 1.1875728368759155, 1.1870524883270264, 1.1906765699386597, 1.1901606321334839, 1.1896477937698364, 1.1891380548477173, 1.1886314153671265, 1.1839953660964966, 1.1834967136383057, 1.1830012798309326, 1.1825090646743774, 1.182019829750061, 1.1815338134765625, 1.1810510158538818, 1.1805713176727295, 1.180094838142395, 1.1796214580535889, 1.1791512966156006, 1.1786842346191406, 1.1782203912734985, 1.1777597665786743, 1.1773022413253784, 1.1768479347229004, 1.1763968467712402, nan, 1.175948977470398, 1.1755043268203735, 1.1750627756118774, 1.1746244430541992, 1.1741894483566284, 1.173757553100586, 1.1774243116378784, 1.1769973039627075, 1.176573634147644, 1.1761531829833984, 1.1757360696792603, 1.1712340116500854, 1.170824646949768, 1.170418620109558, 1.170015811920166, 1.1655339002609253, 1.1651389598846436, 1.1647473573684692, 1.1643588542938232, 1.1639736890792847, 1.163591742515564, nan, 1.1672874689102173, 1.1669107675552368, 1.1665372848510742, 1.166167140007019, 1.1658002138137817, 1.1654366254806519, 1.1650762557983398, 1.1606539487838745, 1.1562373638153076, 1.1558892726898193, 1.155544638633728, 1.1552032232284546, 1.154865026473999, 1.1626462936401367, 1.162312388420105, 1.1619818210601807, nan, 1.1616544723510742, 1.1613305807113647, 1.1610099077224731, 1.160692572593689, 1.1603785753250122, 1.1600679159164429, 1.159760594367981, 1.155409574508667, 1.1551100015640259, 1.1548136472702026, 1.1504768133163452, 1.1501882076263428, 1.1499029397964478, 1.1496210098266602, nan, 1.14934241771698, 1.1490670442581177, 1.1487951278686523, 1.1485264301300049, 1.1482611894607544, 1.1479992866516113, 1.1477406024932861, 1.147485375404358, 1.147233486175537, 1.1469849348068237, 1.1467397212982178, 1.142467975616455, 1.1462593078613281, nan, 1.146024227142334, 1.1457923650741577, 1.1455639600753784, 1.1453388929367065, 1.1451172828674316, 1.1448988914489746, 1.1446839570999146, 1.144472360610962, 1.1442642211914062, 1.144059419631958, 1.1438579559326172, 1.1436598300933838, 1.1434651613235474, nan, 1.1432738304138184, 1.1430859565734863, 1.13888418674469, 1.13870370388031, 1.1385265588760376, 1.0459996461868286, 1.0428321361541748, 1.0426790714263916, 1.0425292253494263, 1.0393726825714111, 1.0362199544906616, nan, 1.0330712795257568, 1.0289236307144165, 1.0287909507751465, 1.0286612510681152, 1.0255273580551147, 1.0223971605300903, 1.0222774744033813, 1.01915442943573, 1.0190411806106567, 1.0189310312271118, 1.015818476676941, nan, 1.0157146453857422, 1.0156139135360718, 1.0155161619186401, 1.0154215097427368, 1.0123260021209717, 1.0122376680374146, 1.0121523141860962, 1.0120701789855957, 1.0119909048080444, 1.0149174928665161, 1.0148441791534424, nan, 1.0147738456726074, 1.0147066116333008, 1.0146424770355225, 1.014581322669983, 1.0145232677459717, 1.0144681930541992, 1.014416217803955, 1.0143673419952393, 1.0143214464187622, 1.0172795057296753, 1.0172396898269653, nan, 1.0172028541564941, 1.0171691179275513, 1.0171384811401367, 1.017110824584961, 1.0200865268707275, 1.0170648097991943, 1.020046591758728, 1.020031213760376, 1.0230189561843872, 1.0260096788406372, nan, 1.0260034799575806, 1.0300004482269287, 1.0330004692077637, 1.036003589630127, 1.0360097885131836, 1.036019206047058, 1.0330315828323364, 1.036047339439392, 1.033065915107727, 1.0420883893966675, 1.1381239891052246, nan, 1.142155408859253, 1.1381891965866089, 1.1382269859313965, 1.1382681131362915, 1.138312816619873, 1.138360857963562, 1.1424137353897095, 1.142468810081482, 1.1425273418426514, 1.1425893306732178, nan, 1.1426546573638916, 1.146726131439209, 1.1467986106872559, 1.1468746662139893, 1.1429506540298462, 1.1430332660675049, 1.1431193351745605, 1.1432087421417236, 1.1433017253875732, 1.1433980464935303, 1.1434978246688843, nan, 1.1436009407043457, 1.147713541984558, 1.143817663192749, 1.1479378938674927, 1.1440479755401611, 1.1441683769226074, 1.148300051689148, 1.1484277248382568, 1.1485587358474731, 1.148693323135376, 1.1488312482833862, nan, 1.148972511291504, 1.149117350578308, 1.1492655277252197, 1.1494171619415283, 1.1495722532272339, 1.1497306823730469, 1.1498926877975464, 1.1500579118728638, 1.1502267122268677, 1.150398850440979, 1.1505744457244873, nan, 1.1507534980773926, 1.1509358882904053, 1.151121735572815, 1.151310920715332, 1.151503562927246, 1.1516996622085571, 1.1518990993499756, 1.152101993560791, 1.1523082256317139, 1.1525179147720337, 1.152730941772461, 1.1529474258422852, nan, 1.1531672477722168, 1.1533905267715454, 1.1536171436309814, 1.1538472175598145, 1.1540806293487549, 1.1543173789978027, 1.1545575857162476, 1.1548011302947998, 1.1550480127334595, 1.1552983522415161, 1.1555520296096802, 1.1558090448379517, 1.1560695171356201, nan, 1.1603693962097168, 1.1566004753112793, 1.1609089374542236, 1.1571449041366577, 1.1574220657348633, 1.1577026844024658, 1.1579866409301758, 1.1582739353179932, 1.158564567565918, 1.1629034280776978, 1.1632018089294434, 1.1635035276412964, 1.1638085842132568, nan, 1.1641169786453247, 1.1644287109375, 1.1647439002990723, 1.1650623083114624, 1.16538405418396, 1.165709137916565, 1.1660375595092773, 1.1663693189620972, 1.1667044162750244, 1.167042851448059, 1.1673846244812012, 1.1677296161651611, 1.1680779457092285, 1.1684296131134033, 1.1687846183776855, 1.1691428422927856, nan, 1.1695044040679932, 1.169869303703308, 1.1702375411987305, 1.1706089973449707, 1.1709836721420288, 1.1713616847991943, 1.1676673889160156, 1.172127604484558, 1.1725155115127563, 1.1729066371917725, 1.173301100730896, 1.1736987829208374, 1.1740996837615967, 1.1775678396224976, 1.177976369857788, 1.1783881187438965, 1.1788032054901123, 1.1792213916778564, 1.1796430349349976, nan, 1.180067777633667, 1.1804958581924438, 1.180927038192749, 1.1813615560531616, 1.181799292564392, 1.1863417625427246, 1.186787486076355, 1.1872364282608032, 1.1876887083053589, 1.1881440877914429, 1.1886026859283447, 1.1849536895751953, 1.1854171752929688, 1.189997911453247, 1.1863538026809692, 1.1868268251419067, 1.1914221048355103, 1.1919032335281372, 1.196509838104248, 1.1928749084472656, 1.1974912881851196, 1.1979868412017822, 1.1984856128692627, 1.198987603187561, 1.1994926929473877, 1.2000008821487427, 1.200512409210205, 1.2010270357131958, nan, 1.2015447616577148, 1.2020657062530518, 1.202589750289917, 1.2031170129776, 1.2036473751068115, 1.2041809558868408, 1.2047176361083984, 1.2052574157714844, 1.2058002948760986, 1.2105026245117188, 1.2068955898284912, 1.20744788646698, 1.208003282546997, 1.2085617780685425, 1.2091233730316162, 1.2096881866455078, 1.2102559804916382, 1.2108268737792969, 1.2114008665084839, 1.2119779586791992, 1.2125581502914429, 1.2173209190368652, 1.217909336090088, 1.2185007333755493, 1.2190951108932495, 1.2196927070617676, 1.2202932834625244, 1.2208969593048096, 1.2215036153793335, 1.2221133708953857, 1.2227262258529663, 1.2233420610427856, 1.2239608764648438, 1.2245827913284302, 1.2252076864242554, 1.2258356809616089, 1.2264666557312012, 1.2271006107330322, 1.227737545967102, 1.2283775806427002, 1.2290204763412476, 1.2296664714813232, 1.2303154468536377, 1.230967402458191, 1.231622338294983, 1.2322802543640137, 1.2329410314559937, 1.233604907989502, 1.2342716455459595, 1.2356141805648804, 1.2362897396087646, 1.2369683980941772, 1.2376497983932495, 1.23833429813385, 1.2390216588974, 1.2397119998931885, 1.2404052019119263, 1.2411012649536133, 1.241800308227539, 1.242502212524414, 1.2432070970535278, 1.2439147233963013, 1.2446253299713135, 1.245338797569275, 1.246055245399475, 1.2424936294555664, 1.2432132959365845, 1.2439357042312622, 1.2403727769851685, 1.2368077039718628, 1.234313726425171, 1.235040545463562, 1.2357702255249023, 1.2322018146514893, 1.2336699962615967, 1.2300996780395508, 1.2308380603790283, 1.227265477180481, 1.232323169708252, 1.2287509441375732, 1.2251760959625244, 1.22592294216156, 1.2309993505477905, 1.2317543029785156, 1.2325118780136108, 1.2332723140716553, 1.2340352535247803, 1.2348010540008545, 1.2355693578720093, 1.2371143102645874, 1.2378907203674316, 1.2343159914016724, 1.2274709939956665, 1.2206189632415771, 1.2137597799301147, 1.2101672887802124, 1.2065718173980713, 1.2040659189224243, 1.2004649639129639, 1.1935789585113525, 1.1841665506362915, 1.1816457509994507, 1.17473566532135, 1.1755011081695557, 1.1729741096496582, 1.1693462133407593, 1.1668146848678589, 1.1609798669815063, 1.1584423780441284, 1.1456427574157715, 1.1430940628051758, 1.1438555717468262, 1.144619345664978, 1.1420687437057495, 1.139515995979309, 1.1358541250228882, 1.133296251296997, 1.1274105310440063, 1.113398551940918, 1.110823392868042, 1.104911208152771, 1.105666160583496, 1.103083848953247, 1.1038408279418945, 1.101256012916565, 1.0964380502700806, 1.0912530422210693, 1.0886567831039429, 1.0871764421463013, 1.0879336595535278, 1.0786124467849731, 1.077125072479248, 1.0689069032669067, 1.0647941827774048, 1.0621728897094727, 1.0629231929779053, 1.0636754035949707, 1.0610506534576416, 1.059550166130066, 1.0554167032241821, 1.0527821779251099, 1.0512751340866089, 1.0520291328430176, 1.047124981880188, 1.044480323791504, 1.0380475521087646, 1.03652822971344, 1.0338715314865112, 1.0323486328125, 1.0296865701675415, 1.0304372310638428, 1.0266318321228027]
# detection
#ranges_good = np.array([x for x in ranges if not np.isnan(x)])
sd = ScanDetector(ranges, angle_min, angle_max, angle_increment)
segments = sd.segmentise()
# plot

colours = cm.rainbow(np.linspace(0, 1, len(segments)))
for segment, c in zip(segments, colours):
    ranges, angles = zip(*segment)
    ranges, angles = np.array(ranges), np.array(angles)
    plt.scatter(ranges*np.cos(angles + np.pi/2),ranges*np.sin(angles + np.pi/2), color=c)

    if sd.is_circle(segment):
        print "is circle"
    else:
        print "is not circle"

    


plt.show()

